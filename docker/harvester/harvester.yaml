services:
  harvester-redis:
    image: redis:7
    container_name: harvester-redis
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - svph-network
    profiles:
      - harvester
  harvester-db:
    image: postgres:16
    container_name: harvester-db
    restart: always
    environment:
      POSTGRES_USER: ${HARVESTER_DB_USER}
      POSTGRES_PASSWORD: ${HARVESTER_DB_PASSWORD}
      POSTGRES_DB: ${HARVESTER_DB_NAME}
    expose:
      - 5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready  -d ${HARVESTER_DB_NAME} -U ${HARVESTER_DB_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - svph-network
    profiles:
      - harvester
  #  harvester-ui:
  #    image: crisalidesr/svp-harvester:latest
  #    container_name: harvester-ui
  #    ports:
  #      - 8000:8000
  #    environment:
  #      - APP_ENV=DEV
  #      - API_HOST=http://localhost:8000
  #      - API_PREFIX=/api
  #      - API_VERSION=v1
  #      - DB_HOST=harvester-db
  #      - DB_PORT=5432
  #      - DB_NAME=${HARVESTER_DB_NAME}
  #      - DB_USER=${HARVESTER_DB_USER}
  #      - DB_PASSWORD=${HARVESTER_DB_PASSWORD}
  #      - REDIS_URL=${REDIS_URL}
  #      - AMQP_ENABLED=false
  #      - SCANR_ES_HOST=${SCANR_ES_HOST}
  #      - SCANR_ES_USER=${SCANR_ES_USER}
  #      - SCANR_ES_PASSWORD=${SCANR_ES_PASSWORD}
  #    depends_on:
  #      harvester-db:
  #        condition: service_healthy
  #      harvester-redis:
  #        condition: service_healthy
  #    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
  #    profiles:
  #      - harvester

  harvester-worker:
    image: crisalidesr/svp-harvester:latest
    container_name: harvester-worker
    environment:
      - APP_ENV=DEV
      - DB_HOST=harvester-db
      - DB_PORT=5432
      - DB_NAME=${HARVESTER_DB_NAME}
      - DB_USER=${HARVESTER_DB_USER}
      - DB_PASSWORD=${HARVESTER_DB_PASSWORD}
      - REDIS_URL=${REDIS_URL}
      - AMQP_ENABLED=true
      - AMQP_HOST=crisalid-bus
      - AMQP_PORT=${CRISALID_BUS_AMQP_PORT}
      - AMQP_USER=${CRISALID_BUS_USER}
      - AMQP_PASSWORD=${CRISALID_BUS_PASSWORD}
      - SCANR_ES_HOST=${SCANR_ES_HOST}
      - SCANR_ES_USER=${SCANR_ES_USER}
      - SCANR_ES_PASSWORD=${SCANR_ES_PASSWORD}
      - INNER_TASK_PARALLELISM_LIMIT=20
      - INNER_TASK_QUEUE_LENGTH=20
    depends_on:
      crisalid-bus:
        condition: service_healthy
      harvester-db:
        condition: service_healthy
      harvester-redis:
        condition: service_healthy
    command: bash -c "alembic upgrade head && python -m app.amqp_listen"
    networks:
      - svph-network
      - crisalid-back
    profiles:
      - harvester

networks:
  svph-network:
    driver: bridge
  crisalid-back:
    driver: bridge