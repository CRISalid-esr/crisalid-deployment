services:
  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    expose:
      - 5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${KEYCLOAK_DB_USER} -d ${KEYCLOAK_DB_NAME}' ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - keycloak-network
    profiles:
      - keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    container_name: keycloak
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: ${KEYCLOAK_DB_HOST}
      KC_DB_URL_PORT: ${KEYCLOAK_DB_PORT}
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: ${KEYCLOAK_HOST}
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT}
      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
    hostname: ${KEYCLOAK_HOST}
    volumes:
      - ./config:/opt/keycloak/data/import
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - keycloak-network
      - crisalid-front
    profiles:
      - keycloak
networks:
  keycloak-network:
    driver: bridge
  crisalid-front:
    driver: bridge

